/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Model.DoanhThu;
import Model.TonKho;
import Service.DoanhThuDAL;
import Service.HoaDonDAL;
import Service.SanPhamDAL;
import Service.TonKhoDAL;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.math.BigDecimal;
import java.util.Calendar;
import java.util.List;
import javax.print.attribute.standard.SheetCollate;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.sl.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author PC
 */
public final class DoanhThuJPane extends javax.swing.JPanel {

    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form DoanhThuJPane
     */
    public DoanhThuJPane() {
        initComponents();
        //initTable();
        //fillToTable();  
//        hienthitcptheothang();
//        hienthiSDbanra();
//        hienthiDT();
        loadThang();
        loadNam();
    }
//    public void initTable(){
//        String[] cols = new String[]{"Mã doanh thu","Chi phí nhập hàng","Số đơn bán ra","Doanh thu","Lợi nhuận","Tháng","Năm"};
//        tableModel.setColumnIdentifiers(cols);
//        tblDoanhThu.setModel(tableModel);
//    }

    public void fillToTable() {
        try {
            List<DoanhThu> list = DoanhThuDAL.findAll();
            tableModel.setNumRows(0);
            for (DoanhThu doanhThu : list) {
                tableModel.addRow(new Object[]{doanhThu.getMaDT(), doanhThu.getChiPhi(),
                    doanhThu.getSoDon(), doanhThu.getDT(), doanhThu.getLoiNhuan(),
                    doanhThu.getThang(), doanhThu.getNam()});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void tinhLN() {
        try {
            String thang = (String) cboThang.getSelectedItem();
            String nam = (String) cboNam.getSelectedItem();
            double doanhThu = HoaDonDAL.tinhTongDTtheothang(thang, nam);
            txtDT.setText(String.format("%,.0f", doanhThu));
            SanPhamDAL spd = new SanPhamDAL();
            BigDecimal tcp = spd.getTongchiphinhap(thang, nam);
            txtChiPhi.setText(String.format("%,.0f", tcp));
            double loiNhuan = doanhThu - tcp.doubleValue();
            txtLoiNhuan.setText(String.format("%,.0f", loiNhuan));
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void loadThang() {
        for (int i = 1; i <= 12; i++) {
            cboThang.addItem(String.valueOf(i));
        }
        int thangHT = Calendar.getInstance().get(Calendar.MONTH) + 1;
        cboThang.setSelectedItem(thangHT);
    }

    private void loadNam() {
        int namHT = Calendar.getInstance().get(Calendar.YEAR);
        for (int i = namHT - 5; i <= namHT; i++) {
            cboNam.addItem(String.valueOf(i));
        }
        cboNam.setSelectedItem(namHT);
    }

    private void hienthitcptheothang() {
        String thang = (String) cboThang.getSelectedItem();
        String nam = (String) cboNam.getSelectedItem();
        SanPhamDAL spd = new SanPhamDAL();
        BigDecimal tcp = spd.getTongchiphinhap(thang, nam);
        txtChiPhi.setText(String.format("%,.0f", tcp));
    }

    private void hienthiSDbanra() {
        String thang = (String) cboThang.getSelectedItem();
        String nam = (String) cboNam.getSelectedItem();
        int soDon = HoaDonDAL.demSoDonBanRa(thang, nam);
        txtSoDon.setText(String.valueOf(soDon));
    }

    private void hienthiDT() {
        String thang = (String) cboThang.getSelectedItem();
        String nam = (String) cboNam.getSelectedItem();
        double tdt = HoaDonDAL.tinhTongDTtheothang(thang, nam);
        txtDT.setText(String.format("%,.0f", tdt));
    }

    private boolean checkMaDT(String maDT) {
        String regex = "^\\d{4}_(1[0-2]|[1-9])$";
        if (!maDT.matches(regex)) {
            JOptionPane.showMessageDialog(this, "Mã doanh thu nhập không đúng định dạng!\nVui lòng nhập đúng định dạng Năm_Tháng! (VD: 2025_3)", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cboThang = new javax.swing.JComboBox<>();
        txtDT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSoDon = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtChiPhi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtLoiNhuan = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 153));
        jLabel1.setText("THỐNG KÊ DOANH THU");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Tháng");

        cboThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangActionPerformed(evt);
            }
        });

        txtDT.setEnabled(false);
        txtDT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDTFocusLost(evt);
            }
        });
        txtDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDTActionPerformed(evt);
            }
        });
        txtDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDTKeyReleased(evt);
            }
        });

        jLabel5.setText("Doanh thu");

        jLabel4.setText("Số đơn bán ra");

        txtSoDon.setEnabled(false);
        txtSoDon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoDonKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Năm");

        cboNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamActionPerformed(evt);
            }
        });

        jLabel3.setText("Chi phí nhập hàng");

        txtChiPhi.setEnabled(false);
        txtChiPhi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtChiPhiKeyReleased(evt);
            }
        });

        jLabel6.setText("Lợi nhuận");

        txtLoiNhuan.setEnabled(false);
        txtLoiNhuan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLoiNhuanKeyReleased(evt);
            }
        });

        jButton1.setText("Xuất ra file excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDT)
                                .addComponent(cboThang, 0, 185, Short.MAX_VALUE))
                            .addComponent(txtSoDon, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtChiPhi, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLoiNhuan, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboNam, 0, 185, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(jButton1)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(txtChiPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSoDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtLoiNhuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtLoiNhuanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLoiNhuanKeyReleased
        // TODO add your handling code here:
        //tinhLN();

    }//GEN-LAST:event_txtLoiNhuanKeyReleased

    private void txtDTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDTKeyReleased
        // TODO add your handling code here:
        //tinhLN();
        //hienthiDT();
    }//GEN-LAST:event_txtDTKeyReleased

    private void txtChiPhiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChiPhiKeyReleased
        // TODO add your handling code here:
        //tinhLN();
        //hienthiDT();
    }//GEN-LAST:event_txtChiPhiKeyReleased

    private void cboThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangActionPerformed
        // TODO add your handling code here:
//        hienthitcptheothang();
        hienthiSDbanra();
//        hienthiDT();
        tinhLN();
    }//GEN-LAST:event_cboThangActionPerformed

    private void txtDTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDTFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDTFocusLost

    private void txtSoDonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoDonKeyReleased
        // TODO add your handling code here:
        //hienthiSDbanra();
    }//GEN-LAST:event_txtSoDonKeyReleased

    private void cboNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamActionPerformed
        // TODO add your handling code here:
//        hienthitcptheothang();
        hienthiSDbanra();
//        hienthiDT();
        tinhLN();
    }//GEN-LAST:event_cboNamActionPerformed

    private void txtDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDTActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        xuatrafileex();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void xuatrafileex() {
        String thang = (String) cboThang.getSelectedItem();
        String nam = (String) cboNam.getSelectedItem();
        String dt = txtDT.getText();
        String cpnh = txtChiPhi.getText();
        String sdbr = txtSoDon.getText();
        String ln = txtLoiNhuan.getText();
        String userhome = System.getProperty("user.home");
        String filepath = userhome + "\\Documents\\ThongKeDoanhThu.xlsx";
        Workbook wb;
        org.apache.poi.ss.usermodel.Sheet sheet;
        File file = new File(filepath);
        try {
            if (file.exists()) {
                FileInputStream fis = new FileInputStream(file);
                wb = new XSSFWorkbook(fis);
                sheet = wb.getSheetAt(0);
                fis.close();
            } else {
                wb = new XSSFWorkbook();
                sheet = wb.createSheet("Thống kê doanh thu");
                Row hr = sheet.createRow(0);
                hr.createCell(0).setCellValue("Tháng");
                hr.createCell(1).setCellValue("Năm");
                hr.createCell(2).setCellValue("Doanh thu");
                hr.createCell(3).setCellValue("Chi phí nhập hàng");
                hr.createCell(4).setCellValue("Số đơn bán ra");
                hr.createCell(5).setCellValue("Lợi nhuận");
            }
            int lastRow = sheet.getLastRowNum() + 1;
            Row dataRow = sheet.createRow(lastRow);
            dataRow.createCell(0).setCellValue(thang);
            dataRow.createCell(1).setCellValue(nam);
            dataRow.createCell(2).setCellValue(dt);
            dataRow.createCell(3).setCellValue(cpnh);
            dataRow.createCell(4).setCellValue(sdbr);
            dataRow.createCell(5).setCellValue(ln);
            FileOutputStream fos = new FileOutputStream(filepath);
            wb.write(fos);
            fos.close();
            JOptionPane.showMessageDialog(this, "Xuất file thành công!");   
            if(Desktop.isDesktopSupported()){
                Desktop.getDesktop().open(new File(filepath));
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
        }

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtChiPhi;
    private javax.swing.JTextField txtDT;
    private javax.swing.JTextField txtLoiNhuan;
    private javax.swing.JTextField txtSoDon;
    // End of variables declaration//GEN-END:variables
}
